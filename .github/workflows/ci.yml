name: ci

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '**/*.md'
      - 'LICENSE'
  pull_request:
    branches: [ main ]
    paths-ignore:
      - '**/*.md'
      - 'LICENSE'

permissions:
  contents: read
  security-events: write

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-test-security:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        go: ['1.22.x', '1.23.x']

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go }}
          check-latest: true
          cache: true

      - name: Install go-task
        run: go install github.com/go-task/task/v3/cmd/task@latest

      - name: Tooling (optional)
        run: task tools

      - name: Format check
        run: task fmt

      - name: Lint
        run: task lint

      - name: Vet
        run: go vet ./...

      - name: Test (race + shuffle + atomic coverage)
        run: go test -race -shuffle=on -covermode=atomic -coverprofile=coverage.out ./...

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.os }}-go${{ matrix.go }}
          path: coverage.out
          if-no-files-found: ignore
          retention-days: 7

      - name: Coverage gate (>= 80%)
        if: matrix.os == 'ubuntu-latest' && matrix.go == '1.23.x'
        shell: bash
        run: |
          total=$(go tool cover -func=coverage.out | awk '/^total:/{gsub("%","",$3); print $3}')
          echo "Total coverage: ${total}%" >> "$GITHUB_STEP_SUMMARY"
          awk -v p="$total" 'BEGIN { if (p+0 < 80) { printf "Coverage %.2f%% is below 80%%\n", p; exit 1 } }'

      - name: Vulnerability check
        if: matrix.os == 'ubuntu-latest' && matrix.go == '1.23.x'
        run: task vuln
