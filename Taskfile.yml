version: '3'

vars:
  APP_NAME: IT_Tools_GoLang

tasks:
  default:
    desc: Format, lint, test
    cmds:
      - task: fmt
      - task: lint
      - task: test

  tools:
    desc: Install/upgrade dev tools (gofumpt, staticcheck, govulncheck, air)
    cmds:
      - go install github.com/go-task/task/v3/cmd/task@latest
      - go install github.com/air-verse/air@latest
      - go install mvdan.cc/gofumpt@latest
      - go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest
      - go install golang.org/x/vuln/cmd/govulncheck@latest
      - go install golang.org/x/tools/gopls@latest
      - go install golang.org/x/tools/cmd/goimports@latest
      - go install github.com/vektra/mockery/v2@latest
      - go install github.com/go-delve/delve/cmd/dlv@latest
      - go get github.com/stretchr/testify@latest

  run:
    desc: Run the app once
    cmds:
      - go run ./cmd/server

  dev:
    desc: Hot reload dev server (uses Air)
    cmds:
      - air

  fmt:
    desc: Format code with gofumpt
    cmds:
      - gofumpt -l -w .
      - goimports -w .
      - go fmt ./...

  lint:
    desc: Static analysis
    cmds:
      - golangci-lint run ./...

  test:
    desc: Run tests verbosely with coverage report
    cmds:
      - go test -v -coverprofile=coverage.out -tags=cover ./...

  cover:
    desc: Show total coverage in console
    cmds:
      - cmd: go tool cover -func=coverage.out
        platforms: [windows]
      - cmd: sh -c "go tool cover -func=coverage.out"
        platforms: [linux, darwin]

  cover-html:
    desc: Open HTML coverage (creates coverage.html)
    cmds:
      - go tool cover -html=coverage.out -o coverage.html

  vuln:
    desc: Check for known vulnerabilities
    cmds:
      - govulncheck ./...

  tidy:
    desc: Tidy modules
    cmds:
      - go mod tidy

  build:
    desc: Build the application
    cmds:
      - go build -o bin/server ./cmd/server

  clean:
    desc: Clean build/test caches and mod list
    cmds:
      - go mod tidy
      - go clean -cache -testcache

  release:
    desc: Build an optimized release binary
    cmds:
      - go build -trimpath -ldflags="-s -w" -o bin/server ./cmd/server

  precommit:
    desc: Run checks before committing
    cmds:
      - task: fmt
      - task: clean
      - task: lint
      - task: test
      - task: vuln
      - task: cover
